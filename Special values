Exercise Set 1:

a. Store the following vector:
foo <- c(13563,-14156,-14319,16981,12921,11979,9568,8833,-12968, 8133). Then, do the following:
i. Output all elements of foo that, when raised to a power of 75, are NOT infinite.
ii. Return the elements of foo, excluding those that result in negative infinity when raised to a power of 75.

b. Store the following 3 × 4 matrix as the object bar:
77875.40 27551.45 23764.30 −36478.88
−35466.25 −73333.85 36599.69 −70585.69
−39803.81 55976.34 76694.82 47032.00

Now, do the following:
i. Identify the coordinate-specific indexes of the entries of bar that are NaN when you raise bar to a power of 65 and divide by infinity.
ii. Return the values in bar that are NOT NaN when bar is raised to a power of 67 and infinity is added to the result. Confirm this is identical to identifying
those values in bar that, when raised to a power of 67, are not equal to negative infinity.
iii. Identify those values in bar that are either negative infinity OR finite when you raise bar to a power of 67.

Note: You may consider the "arr.ind" argument in the "which" function with the argument value = TRUE unless you have other solution(s). 


Exercise Set 2:

a. Consider the following line of code: foo <- c(4.3,2.2,NULL,2.4,NaN,3.3,3.1,NULL,3.4,NA). Decide yourself which of the following statements are true and which
are false and then use R to confirm:
i. The length of foo is 8.
ii. Calling which(x=is.na(x=foo)) will not result in 4 and 8.
iii. Checking is.null(x=foo) will provide you with the locations of the two NULL values that are present.
iv. Executing is.na(x=foo[8])+4/NULL will not result in NA.

b. Create and store a list containing a single member: the vector c(7,7,NA,3,NA,1,1,5,NA). Then, do the following:
i. Name the member "alpha".
ii. Confirm that the list doesn’t have a member with the name "beta" using the appropriate logical valued function.
iii. Add a new member called beta, which is the vector obtained by identifying the index positions of alpha that are NA.
